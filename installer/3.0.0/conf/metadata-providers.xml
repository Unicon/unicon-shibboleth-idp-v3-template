<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is an EXAMPLE metadata configuration file. -->
<MetadataProvider id="ShibbolethMetadata" xsi:type="ChainingMetadataProvider"
	xmlns="urn:mace:shibboleth:2.0:metadata" xmlns:resource="urn:mace:shibboleth:2.0:resource"
	xmlns:security="urn:mace:shibboleth:2.0:security"
	xmlns:samlmd="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:mace:shibboleth:2.0:metadata http://shibboleth.net/schema/idp/shibboleth-metadata.xsd
                        urn:mace:shibboleth:2.0:resource http://shibboleth.net/schema/idp/shibboleth-resource.xsd 
                        urn:mace:shibboleth:2.0:security http://shibboleth.net/schema/idp/shibboleth-security.xsd
                        urn:oasis:names:tc:SAML:2.0:metadata http://docs.oasis-open.org/security/saml/v2.0/saml-schema-metadata-2.0.xsd">
                        
	<!-- ========================================================================================== -->
	<!--                             Metadata Configuration                                         -->
	<!--                                                                                            -->
	<!--  Below you place the mechanisms which define how to load the metadata for the SP you will  -->
	<!--  provide a service to.                                                                     -->
    <!--                                                                                            -->
    <!--  Two examples are provided.  The Shibboleth Documentation                                  -->
    <!--  https://wiki.shibboleth.net/confluence/display/SHIB2/IdPMetadataProvider provides more    -->
    <!--  details.                                                                                  -->	
    <!--                                                                                            -->
    <!--  NOTE.  This file SHOULD NOT contain the metadata for this IdP.                            -->
    <!--                                                                                            -->
    <!-- ========================================================================================== -->

	<MetadataProvider id="HTTPMetadata"
	                  xsi:type="metadata:FileBackedHTTPMetadataProvider"
                      backingFile="%{idp.home}/metadata/testshib-metadata.xml"
                      metadataURL="http://www.testshib.org/metadata/testshib-providers.xml" /> 
	
	<MetadataProvider id="HTTPMetadata"
	                  xsi:type="metadata:FileBackedHTTPMetadataProvider"
                      backingFile="%{idp.home}/metadata/InCommon-metadata.xml"
                      metadataURL="http://md.incommon.org/InCommon/InCommon-metadata.xml"> 
        
		<MetadataFilter xsi:type="SignatureValidation" requireSignedMetadata="true">
			<PublicKey>
                MIIDgTCCAmmgAwIBAgIJAJRJzvdpkmNaMA0GCSqGSIb3DQEBCwUAMFcxCzAJBgNV
				BAYTAlVTMRUwEwYDVQQKDAxJbkNvbW1vbiBMTEMxMTAvBgNVBAMMKEluQ29tbW9u
				IEZlZGVyYXRpb24gTWV0YWRhdGEgU2lnbmluZyBLZXkwHhcNMTMxMjE2MTkzNDU1
				WhcNMzcxMjE4MTkzNDU1WjBXMQswCQYDVQQGEwJVUzEVMBMGA1UECgwMSW5Db21t
				b24gTExDMTEwLwYDVQQDDChJbkNvbW1vbiBGZWRlcmF0aW9uIE1ldGFkYXRhIFNp
				Z25pbmcgS2V5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0Chdkrn+
				dG5Zj5L3UIw+xeWgNzm8ajw7/FyqRQ1SjD4Lfg2WCdlfjOrYGNnVZMCTfItoXTSp
				g4rXxHQsykeNiYRu2+02uMS+1pnBqWjzdPJE0od+q8EbdvE6ShimjyNn0yQfGyQK
				CNdYuc+75MIHsaIOAEtDZUST9Sd4oeU1zRjV2sGvUd+JFHveUAhRc0b+JEZfIEuq
				/LIU9qxm/+gFaawlmojZPyOWZ1JlswbrrJYYyn10qgnJvjh9gZWXKjmPxqvHKJcA
				TPhAh2gWGabWTXBJCckMe1hrHCl/vbDLCmz0/oYuoaSDzP6zE9YSA/xCplaHA0mo
				C1Vs2H5MOQGlewIDAQABo1AwTjAdBgNVHQ4EFgQU5ij9YLU5zQ6K75kPgVpyQ2N/
				lPswHwYDVR0jBBgwFoAU5ij9YLU5zQ6K75kPgVpyQ2N/lPswDAYDVR0TBAUwAwEB
				/zANBgkqhkiG9w0BAQsFAAOCAQEAaQkEx9xvaLUt0PNLvHMtxXQPedCPw5xQBd2V
				WOsWPYspRAOSNbU1VloY+xUkUKorYTogKUY1q+uh2gDIEazW0uZZaQvWPp8xdxWq
				Dh96n5US06lszEc+Lj3dqdxWkXRRqEbjhBFh/utXaeyeSOtaX65GwD5svDHnJBcl
				AGkzeRIXqxmYG+I2zMm/JYGzEnbwToyC7yF6Q8cQxOr37hEpqz+WN/x3qM2qyBLE
				CQFjmlJrvRLkSL15PCZiu+xFNFd/zx6btDun5DBlfDS9DG+SHCNH6Nq+NfP+ZQ8C
				GzP/3TaZPzMlKPDCjp0XOQfyQqFIXdwjPFTWjEusDBlm4qJAlQ==
			</PublicKey>
		</MetadataFilter>
		<MetadataFilter xsi:type="EntityRoleWhiteList">
			<RetainedRole>samlmd:SPSSODescriptor</RetainedRole>
		</MetadataFilter>
        
	</MetadataProvider>
	

	<!-- Example HTTP metadata provider.  Use this if you want to download
	     the metadata from a remote service.
	     
	     You *MUST*  provider the SignatureValidationFilter in order to function securely.
	     Get the PubLic key, and validate it via some out of band mechanism, from the
	     party publishing the metadata
	     
	     The EntityRoleWhiteList saves memory by only loading metadata from entity types
	     that you will interoperate with. 
    
	<MetadataProvider id="HTTPMetadata"
	                  xsi:type="metadata:FileBackedHTTPMetadataProvider"
                      backingFile="%{idp.home}/metadata/localCopyFromXYZHTTP.xml"
                      metadataURL="http://WHATEVER"> 
        
		<MetadataFilter xsi:type="SignatureValidation"
			requireSignedMetadata="false">
			<PublicKey>
                THIS IS AN EXAMPLE
			
				MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxg0TyQAP/tIvOH89EtaX
				uRRn8SYzTj7W1TbNY4VvBmobjkRmSkki4hH9x4sQpi635wn6WtXTN/FNNmkTK3N/
				LspmBWxfZS+n+cc7I82E5yvCAPX67QsZgqgglp2W5dvK/FsMMCS6X6SVqzBLMP88
				NenXKxY+HMxMs0sT0UKYh1cAEqadrHRBO65aDBcm5a0sBVYt9K6pgaOHrp/zSIbh
				nR5tFFLjBbtFktDpHL3AdGBH3OYidNGKBO3tJ3Ms7LeKXsM0+0Y4P+9fHZINL2X3
				E2N6GVnKs5PZTg9sP0FtIpAbYm/+zCx7Yj1ET/Er8mDd6tNVGSQsn9s5xUBwGqn1
				4wIDAQAB
			</PublicKey>
		</MetadataFilter>
		<MetadataFilter xsi:type="EntityRoleWhiteList">
			<RetainedRole>samlmd:SPSSODescriptor</RetainedRole>
		</MetadataFilter>
        
	</MetadataProvider>
	
    -->   

    <!-- Example file metadata provider.  Use this if you want to load metadata
         from a local file.  You might use this if you have some local SPs
         which are not "federated" but you wish to offer a service to.
         
         If you do not provide a SignatureValidation filter then you *have*
         to know that the file is valid.
         

    <MetadataProvider id="LocalMetadata"  xsi:type="FilesystemMetadataProvider" metadataFile="PATH_TO_YOUR_METADATA"/>

     -->
          
	
</MetadataProvider>